{"version":3,"sources":["view/pages/authenticationAdmin/Login/components/LoginForm.jsx","view/pages/authenticationAdmin/Login/index.jsx"],"names":["connect","state","adminUsername","adminName","adminEmail","dispather","login","data","type","ADMIN_NAME","payload","ADMIN_USERNAME","adminUser","ADMIN_MAIL","adminMail","props","useState","username","setUsername","password","setPassword","isAuth","setIsAuth","fetchApi","usePermissionContext","useEffect","localStorage","getItem","window","location","href","tryLogin","api","post","then","response","status","message","error","setItem","token_type","access_token","id","name","email","info","catch","err","layout","labelCol","span","wrapperCol","initialValues","remember","autoComplete","Item","label","rules","required","prefix","placeholder","value","onChange","e","target","Password","className","onClick","danger","htmlType","block","Login","src","Logo","alt"],"mappings":"mVA0IA,IAkBeA,eAlBS,SAACC,GACvB,MAAO,CACLC,cAAeD,EAAMC,cACrBC,UAAWF,EAAME,UACjBC,WAAYH,EAAMG,WAErB,IAE4B,SAACC,GAC5B,MAAO,CACLC,MAAO,SAACC,GACNF,EAAU,CAAEG,KAAMC,IAAYC,QAASH,EAAKJ,YAC5CE,EAAU,CAAEG,KAAMG,IAAgBD,QAASH,EAAKK,YAChDP,EAAU,CAAEG,KAAMK,IAAYH,QAASH,EAAKO,WAC7C,EAEJ,GAEcd,EAzIf,SAAmBe,GACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KAEQC,EAAaC,cAAbD,SAERE,qBAAU,WACJC,aAAaC,QAAQ,WAAUC,OAAOC,SAASC,KAAO,IAC3D,GAAE,CAACT,IAEJ,IAAMU,EAAQ,iDAAG,4FACXd,IAAYE,EADD,gCAEPa,IACHC,KAAK,QAAS,CAAEhB,SAAUA,EAAUE,SAAUA,IAC9Ce,KAFG,iDAEE,WAAOC,GAAP,8EACmC,IAAnCA,EAAS5B,KAAKA,KAAKA,KAAK6B,OADxB,uBAEFC,IAAQC,MAAM,6CAFZ,iCAMJZ,aAAaa,QACX,QADF,UAEKJ,EAAS5B,KAAKA,KAAKiC,WAFxB,YAEsCL,EAAS5B,KAAKA,KAAKkC,eAEzDf,aAAaa,QAAQ,KAAMJ,EAAS5B,KAAKA,KAAKA,KAAKmC,IAEnD3B,EAAMT,MAAM,CACVH,UAAWgC,EAAS5B,KAAKA,KAAKoC,KAC9BzC,cAAeiC,EAAS5B,KAAKA,KAAKU,SAClCH,UAAWqB,EAAS5B,KAAKA,KAAKqC,QAGhCtB,GAAU,GAlBN,SAmBEC,IAnBF,OAqBJc,IAAQQ,KAAK,mBArBT,4CAFF,uDAyBHC,OAAM,SAACC,GACNV,IAAQC,MACN,2DAEH,IA/BU,2CAAH,qDAmCd,OACE,mCACE,eAAC,IAAD,CACEK,KAAK,QACLK,OAAO,WACPC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,cAAe,CACbC,UAAU,GAEZC,aAAa,MAZf,UAcE,cAAC,IAAKC,KAAN,CACEC,MAAM,WACNb,KAAK,WACLc,MAAO,CACL,CACEC,UAAU,EACVrB,QAAS,6BANf,SAUE,cAAC,IAAD,CACEsB,OAAQ,cAAC,IAAD,IACRC,YAAY,oBACZC,MAAO5C,EACP6C,SAAU,SAACC,GAAD,OAAO7C,EAAY6C,EAAEC,OAAOH,MAA5B,MAId,cAAC,IAAKN,KAAN,CACEC,MAAM,WACNb,KAAK,WACLc,MAAO,CACL,CACEC,UAAU,EACVrB,QAAS,6BANf,SAUE,cAAC,IAAM4B,SAAP,CACEN,OAAQ,cAAC,IAAD,IACRC,YAAY,oBACZM,UAAU,UACVL,MAAO1C,EACP2C,SAAU,SAACC,GAAD,OAAO3C,EAAY2C,EAAEC,OAAOH,MAA5B,MAId,cAAC,IAAKN,KAAN,CACEJ,WAAY,CACVD,KAAM,IAFV,SAKE,cAAC,IAAD,CACE1C,KAAK,UACL2D,QAASpC,EACTqC,QAAM,EACNC,SAAS,SACTC,OAAK,EALP,yBAaT,I,SClIc,SAASC,IACtB,OACE,sBAAKL,UAAU,yBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,qBAAKM,IAAKC,IAAMC,IAAI,WAEtB,qBAAKR,UAAU,kBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,UAKT,C","file":"static/js/87.9f3ef975.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { api } from \"../../../../../configs/apiConfig\";\nimport {\n  ADMIN_NAME,\n  ADMIN_USERNAME,\n  ADMIN_MAIL,\n} from \"../../../../../redux/customise/customiseTypes\";\n\nimport { FiUser } from \"react-icons/fi\";\nimport { GiPadlock } from \"react-icons/gi\";\n\nimport { Button, Checkbox, Form, Input, message } from \"antd\";\n\nimport \"./Login.css\";\nimport { usePermissionContext } from \"../../../../../context/PermissionContext\";\n\nfunction LoginForm(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isAuth, setIsAuth] = useState(false);\n\n  const { fetchApi } = usePermissionContext();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) window.location.href = \"/\";\n  }, [isAuth]);\n\n  const tryLogin = async () => {\n    if (username && password) {\n      await api\n        .post(\"login\", { username: username, password: password })\n        .then(async (response) => {\n          if (response.data.data.data.status === 2) {\n            message.error(\"Akun tidak aktif, silahkan hubungi admin!\");\n            return;\n          }\n\n          localStorage.setItem(\n            \"token\",\n            `${response.data.data.token_type} ${response.data.data.access_token}`\n          );\n          localStorage.setItem(\"id\", response.data.data.data.id);\n\n          props.login({\n            adminName: response.data.data.name,\n            adminUsername: response.data.data.username,\n            adminMail: response.data.data.email,\n          });\n\n          setIsAuth(true);\n          await fetchApi();\n\n          message.info(\"Selamat Datang!\");\n        })\n        .catch((err) => {\n          message.error(\n            \"Gagal Login! Silakan periksa username dan password Anda!\"\n          );\n        });\n    }\n  };\n\n  return (\n    <>\n      <Form\n        name=\"basic\"\n        layout=\"vertical\"\n        labelCol={{\n          span: 8,\n        }}\n        wrapperCol={{\n          span: 24,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Mohon masukkan username!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<FiUser />}\n            placeholder=\"Masukkan Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Mohon masukkan password!\",\n            },\n          ]}\n        >\n          <Input.Password\n            prefix={<GiPadlock />}\n            placeholder=\"Masukkan Password\"\n            className=\"ant-col\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Item>\n\n        <Form.Item\n          wrapperCol={{\n            span: 24,\n          }}\n        >\n          <Button\n            type=\"primary\"\n            onClick={tryLogin}\n            danger\n            htmlType=\"submit\"\n            block\n          >\n            Login\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    adminUsername: state.adminUsername,\n    adminName: state.adminName,\n    adminEmail: state.adminEmail,\n  };\n};\n\nconst mapDispatcherToProps = (dispather) => {\n  return {\n    login: (data) => {\n      dispather({ type: ADMIN_NAME, payload: data.adminName });\n      dispather({ type: ADMIN_USERNAME, payload: data.adminUser });\n      dispather({ type: ADMIN_MAIL, payload: data.adminMail });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatcherToProps)(LoginForm);\n","import React from \"react\";\n\nimport { LoginForm } from \"./components\";\n\nimport Logo from \"../../../../assets/images/logo/BEST_WISHES.png\";\n\nexport default function Login() {\n  return (\n    <div className=\"custom-login-container\">\n      <div className=\"logo\">\n        <img src={Logo} alt=\"logo\" />\n      </div>\n      <div className=\"login-container\">\n        <div className=\"form-container\">\n          <LoginForm />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}